<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CCGEEEKIx/w/apRCPr/A33QAAAAASUVORK5CYII=
</value>
  </data>
</root>